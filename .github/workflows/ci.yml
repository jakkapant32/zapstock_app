name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: Install dependencies
      run: |
        npm ci
        cd api && npm ci
        
    - name: Run linting
      run: |
        npm run lint
        cd api && npm run lint || echo "No lint script in api"
        
    - name: Run tests
      run: |
        npm test || echo "No test script found"
        cd api && npm test || echo "No test script in api"
        
    - name: Build project
      run: |
        npm run build || echo "No build script found"
        cd api && npm run build || echo "No build script in api"

  build-mobile:
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Setup Expo
      uses: expo/expo-github-action@v8
      with:
        expo-version: latest
        token: ${{ secrets.EXPO_TOKEN }}
        
    - name: Install dependencies
      run: npm ci
      
    - name: Build for web
      run: npx expo export --platform web
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: web-build
        path: dist/

  deploy-api:
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: Install API dependencies
      run: cd api && npm ci
      
    - name: Deploy to Render
      run: |
        echo "Deploying to Render.com..."
        # Add your Render deployment commands here
        # This would typically involve triggering a webhook or using Render's API
